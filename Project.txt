Cypher query to load data from the Comma Separated value (CSV) file namely:gene_gene_associations_50k.csv

LOAD CSV WITH HEADERS FROM "file:///C:/Users/Manish/Downloads/Big%20Data%20Analytics/neo4j_module_datasets/gene_gene_associations_50k.csv" AS geneAction
MERGE (n:TrialGene {Name:geneAction.OFFICIAL_SYMBOL_A})
MERGE (m:TrialGene {Name:geneAction.OFFICIAL_SYMBOL_B})
MERGE (n) -[:AssociationType {AssociatedWith:geneAction.EXPERIMENTAL_SYSTEM}]-> (m)

3. Perform the following analyses and document your results in order to answer the questions in the accompanying quiz (e.g. You will answer a question for each numbered item below. We suggest you write down that answer as you go along, then enter it in the quiz when you are done):

1. Calculate number of nodes in the graph.
match (n:TrialGene) return count(n) 

2.Calculate the number of edges in the graph.
match(n:TrialGene)-[r]->() return count(r) Sol:46621

3. Calculate the number of loops in the graph.
match (n)-[r]->(n) return count(r)   Sol:1221

4.The query match (n)-[r]->(m) where m <> n return distinct n, m, count(r) gives us
count the number of all non loop edges between adjacent pair of nodes

5.The query match (n)-[r]->(m) where m <> n return distinct n, m, count(r) as myCount order by myCount desc limit 1 produces what?
the pair of nodes with the maximum number of multi-edges between them

6.The query match p=(n {Name:'BRCA1'})-[:AssociationType*..2]->(m) return p produces what?
The 2-neighborhood of the node whose name is ‘BRCA1’

7. Count how many shortest paths there are between the node named ‘BRCA1’ and the node named ‘NBR1’. [Need help? Review the Path Analytics reading and hands-on. ]

MATCH p = allShortestPaths(OFFICIAL_SYMBOL_A-[r:AssociationType*]-OFFICIAL_SYMBOL_B)
WHERE OFFICIAL_SYMBOL_A.Name='BRCA1' AND OFFICIAL_SYMBOL_B.Name = 'NBR1'
RETURN EXTRACT(num IN NODES(p)| num.Name) AS Paths------9

8. Find the top 2 nodes with the highest outdegree. [Need help? Review the Connectivity Analytics reading and hands-on. ]

match (n:TrialGene)-[r]->()
return n.Name as Node, count(r) as Outdegree
order by Outdegree desc
union
match (a:TrialGene)-[r]->(leaf)
where not((leaf)-->())
return leaf.Name as Node, 0 as Outdegree-----------SNCA and BRCA1


9. Modify one of the Cypher queries we provided and create the degree histogram for the network, then calculate how many nodes are in the graph having a degree of 3. [Need help? Review the Connectivity Analytics reading and hands-on. ]
match (n:TrialGene)-[r]-()
with n, count(distinct r) as degree
set n.deg = degree
return n.Name, n.deg ORDER BY n.deg DESC limit 10

match (n:TrialGene)-[r]-()
where 2 < n.deg AND n.deg < 4 
return count(n),n.Name            ------821






